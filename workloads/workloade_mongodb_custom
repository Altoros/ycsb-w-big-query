# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License. See accompanying
# LICENSE file.

# Yahoo! Cloud System Benchmark
# Workload E: Short ranges
#   Application example: threaded conversations, where each scan is for the posts in a given thread (assumed to be clustered by thread id)
#
#   Scan/insert ratio: 95/5
#   Default data size: 1 KB records (10 fields, 100 bytes each, plus key)
#   Request distribution: zipfian

# The insert order is hashed, not ordered. Although the scans are ordered, it does not necessarily
# follow that the data is inserted in order. For example, posts for thread 342 may not be inserted contiguously, but
# instead interspersed with posts from lots of other threads. The way the YCSB client works is that it will pick a start
# key, and then request a number of records; this works fine even for hashed insertion.

recordcount=200000000
operationcount=200000000
workload=com.yahoo.ycsb.workloads.CoreWorkload

readallfields=true

readproportion=0
updateproportion=0.05
scanproportion=0.95
insertproportion=0

requestdistribution=zipfian

maxscanlength=100

scanlengthdistribution=uniform

measurementtype=timeseries+csv
exportfile=./results/4-nodes/mongodb/workloads/e-log.txt
statsexportfile=./results/4-nodes/mongodb/workloads/e-results.csv
maxexecutiontime=600
status.interval=1
fieldsize=100

bigquery.projectid=cpb100-196812
bigquery.dataSetName=benchmark
bigquery.tableName=workloade_mongodb_v13_20n_5c
bigquery.pathToKey=./key-gcp/admin.json
bigquery.model=time:INTEGER;operations:INTEGER;throughput:FLOAT;type:STRING;latency:FLOAT;threads:INTEGER;